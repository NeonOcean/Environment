//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NOModInstaller.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NOModInstaller.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to check if The Sims 4 is running..
        /// </summary>
        internal static string CheckGameFailure {
            get {
                return ResourceManager.GetString("CheckGameFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to clean up temporary files..
        /// </summary>
        internal static string CleanUpFailure {
            get {
                return ResourceManager.GetString("CleanUpFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We could not find your Sims 4 folder, please select it manually..
        /// </summary>
        internal static string CouldNotFindSims4DirectoryMessageText {
            get {
                return ResourceManager.GetString("CouldNotFindSims4DirectoryMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to enable mods. You&apos;ll have to do it manually later..
        /// </summary>
        internal static string EnableModsFailure {
            get {
                return ResourceManager.GetString("EnableModsFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All mods are currently disabled to you want to enable them now?.
        /// </summary>
        internal static string EnableModsPrompt {
            get {
                return ResourceManager.GetString("EnableModsPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to extract mod files..
        /// </summary>
        internal static string ExtractionFailure {
            get {
                return ResourceManager.GetString("ExtractionFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation complete..
        /// </summary>
        internal static string InstallationCompletePhaseText {
            get {
                return ResourceManager.GetString("InstallationCompletePhaseText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid directory path..
        /// </summary>
        internal static string InvalidDirectory {
            get {
                return ResourceManager.GetString("InvalidDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to move files to Sims 4 mods folder..
        /// </summary>
        internal static string MoveFilesFailure {
            get {
                return ResourceManager.GetString("MoveFilesFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking if The Sims 4 is running..
        /// </summary>
        internal static string PhaseCheckGameText {
            get {
                return ResourceManager.GetString("PhaseCheckGameText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cleaning up temporary files..
        /// </summary>
        internal static string PhaseCleanUpText {
            get {
                return ResourceManager.GetString("PhaseCleanUpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking Sims 4 options file..
        /// </summary>
        internal static string PhaseEnableModsText {
            get {
                return ResourceManager.GetString("PhaseEnableModsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extracting mod files..
        /// </summary>
        internal static string PhaseExtractModFilesText {
            get {
                return ResourceManager.GetString("PhaseExtractModFilesText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Moving mod files to Sims 4 mods directory..
        /// </summary>
        internal static string PhaseMoveModFilesText {
            get {
                return ResourceManager.GetString("PhaseMoveModFilesText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstalling previous version..
        /// </summary>
        internal static string PhaseUninstallText {
            get {
                return ResourceManager.GetString("PhaseUninstallText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to install the mod to this directory? It looks like you incorrectly selected the mods folder instead of your sims 4 folder..
        /// </summary>
        internal static string SelectedModsFolderMessageText {
            get {
                return ResourceManager.GetString("SelectedModsFolderMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We cannot install this mod while The Sims 4 is running..
        /// </summary>
        internal static string Sims4RunningText {
            get {
                return ResourceManager.GetString("Sims4RunningText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to delete the previously installed version&apos;s files..
        /// </summary>
        internal static string UninstallAntiqueDeleteFailure {
            get {
                return ResourceManager.GetString("UninstallAntiqueDeleteFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found no uninstaller and failed to detect the mod&apos;s version..
        /// </summary>
        internal static string UninstallAntiqueReadVersionFailure {
            get {
                return ResourceManager.GetString("UninstallAntiqueReadVersionFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to uninstall the previously installed version of this mod, it is uknown to this installer..
        /// </summary>
        internal static string UninstallAntiqueUnknownVersionFailure {
            get {
                return ResourceManager.GetString("UninstallAntiqueUnknownVersionFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to uninstall the previously installed version of this mod..
        /// </summary>
        internal static string UninstallFailure {
            get {
                return ResourceManager.GetString("UninstallFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to startup uninstaller..
        /// </summary>
        internal static string UninstallStartupFailure {
            get {
                return ResourceManager.GetString("UninstallStartupFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to delete the previously installed version&apos;s files..
        /// </summary>
        internal static string UninstallUnqiueFileCleanupFailure {
            get {
                return ResourceManager.GetString("UninstallUnqiueFileCleanupFailure", resourceCulture);
            }
        }
    }
}
